# --- LOCAL DEVELOPMENT ONLY --- 
# Use this DATABASE_URL when running the API server locally (points to local Docker DB).
# For deployed environments (dev/prod Lambda), connection details are set via
# DB_HOST, DB_NAME, DB_PORT, DB_SSLMODE, and RDS_SECRET_ARN environment variables,
# with credentials fetched from AWS Secrets Manager.
DATABASE_URL=postgres://username:password@localhost:5432/database_name?sslmode=disable

# --- DEPLOYED ENVIRONMENT DB CONFIG (Set via serverless.yml/SSM/Secrets Manager) --- 
# DB_HOST=your_rds_endpoint (e.g., from SSM: /cyphera/rds-endpoint-dev)
# DB_NAME=cyphera
# DB_PORT=5432
# DB_SSLMODE=require
# RDS_SECRET_ARN=arn:aws:secretsmanager:region:account:secret:your-secret-name (e.g., from SSM: /cyphera/rds-secret-arn-dev)

# --- Other Configurations --- 
# Supabase Configuration (Set via GitHub Secrets/env)
SUPABASE_URL=your_supabase_project_url
SUPABASE_JWT_SECRET=your_supabase_jwt_secret

# Smart Contract Configuration (Set via GitHub Secrets/env)
CYPHERA_SMART_WALLET_ADDRESS=your_smart_wallet_address

# Circle API Key (Set via GitHub Secrets/env)
CIRCLE_API_KEY=your_circle_api_key

# CORS Configuration (Set via GitHub Secrets/env)
CORS_ALLOWED_ORIGINS=http://localhost:3000
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS,PATCH
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-API-Key,X-Workspace-ID,X-Account-ID
CORS_EXPOSED_HEADERS=Content-Length,Content-Type
CORS_ALLOW_CREDENTIALS=true

# Delegation Server Configuration (Used locally; DELEGATION_SERVER_URL set via SSM for Lambda)
DELEGATION_SERVER_URL=localhost:50051
DELEGATION_LOCAL_MODE=true
DELEGATION_GRPC_ADDR=localhost:50051 # Used by local dev script

# gRPC Server Configuration (Used by delegation-server locally)
GRPC_PORT=50051
GRPC_HOST=0.0.0.0

# API Server Configuration (Used locally)
PORT=8000

# Note: Replace placeholder values in your actual .env (for local) or GitHub Secrets (for deployment).
# Never commit your actual .env file to version control.
