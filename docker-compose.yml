version: '3.8'

services:
  cyphera-api:
    build: .
    container_name: cyphera-api
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - ACTALINK_API_KEY=${ACTALINK_API_KEY}
      - API_PORT=${API_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - cyphera-network

  postgres:
    container_name: cyphera-db
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./internal/db/init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - cyphera-network

volumes:
  postgres_data:

networks:
  cyphera-network:
    driver: bridge 