// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accounts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a list of accounts. Only accessible by admins.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "List accounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.AccountResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new account with a default workspace. Only accessible by admins.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Create an account",
                "parameters": [
                    {
                        "description": "Account creation data",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or metadata format",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Not authenticated",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Not authorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/onboard": {
            "post": {
                "description": "Onboards an account by setting the finished_onboarding flag to true",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Onboard an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/signin": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new account with user and workspace, or returns existing account details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Register or sign in to an account",
                "parameters": [
                    {
                        "description": "Account creation data",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Existing account details",
                        "schema": {
                            "$ref": "#/definitions/handlers.AccountDetailsResponse"
                        }
                    },
                    "201": {
                        "description": "Newly created account",
                        "schema": {
                            "$ref": "#/definitions/handlers.AccountDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body, metadata format, or missing required fields",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{account_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the details of the user's account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.AccountDetailsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/accounts/{account_id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes an account. Only accessible by admins.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Delete an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/api-keys": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all API keys across all workspaces (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-keys"
                ],
                "summary": "Get all API keys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.APIKeyResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/circle/users/{workspace_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new Circle user with PIN authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Create a Circle user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "X-Account-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateUserWithPinAuthRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateUserResponse"
                        }
                    },
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/circle/users/{workspace_id}/token": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a user token for Circle API operations and stores or updates the user in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Create a Circle user token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/workspaces/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all workspaces including deleted ones (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspaces"
                ],
                "summary": "Get all workspaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.WorkspaceResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api-keys": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all API keys for the current workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-keys"
                ],
                "summary": "List API keys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListAPIKeysResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new API key for the current workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-keys"
                ],
                "summary": "Create API key",
                "parameters": [
                    {
                        "description": "API key creation data",
                        "name": "key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAPIKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.APIKeyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api-keys/{api_key_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a specific API key by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-keys"
                ],
                "summary": "Get an API key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key ID",
                        "name": "api_key_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.APIKeyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an existing API key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-keys"
                ],
                "summary": "Update API key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key ID",
                        "name": "api_key_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "API key update data",
                        "name": "key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateAPIKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.APIKeyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Soft deletes an API key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-keys"
                ],
                "summary": "Delete API key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key ID",
                        "name": "api_key_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of transactions with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "List transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User Token",
                        "name": "user_token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter by blockchain",
                        "name": "blockchain",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by destination address",
                        "name": "destination_address",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include all tokens including zero balances",
                        "name": "include_all",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by operation type",
                        "name": "operation",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by transaction state",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by transaction hash",
                        "name": "tx_hash",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by transaction type",
                        "name": "tx_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by user ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by wallet IDs (comma separated)",
                        "name": "wallet_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by start date (RFC3339)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by end date (RFC3339)",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor for previous page",
                        "name": "page_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor for next page",
                        "name": "page_after",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/transactions/transfer": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Generates a challenge for initiating an on-chain digital asset transfer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Create a transfer transaction challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User Token",
                        "name": "user_token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Transfer creation request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/transactions/transfer/estimate-fee": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calculates estimated gas fees for a transfer transaction based on network conditions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Estimate fee for a transfer transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User Token",
                        "name": "user_token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Fee estimation request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.EstimateTransferFeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/transactions/validate-address": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Confirms that a specified address is valid for a given blockchain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Validate a blockchain address",
                "parameters": [
                    {
                        "description": "Address validation request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ValidateAddressRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/transactions/{transaction_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves detailed information about a specific transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Get transaction details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User Token",
                        "name": "user_token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/users/{user_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves user details by Circle user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Get Circle user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/users/{workspace_id}/initialize": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a challenge for user initialization and wallet creation (requires existing Circle user in database)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Initialize Circle user and create wallets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User Token",
                        "name": "user_token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User initialization request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.InitializeUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/users/{workspace_id}/pin/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a challenge for PIN setup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Create a PIN challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User Token",
                        "name": "user_token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request with idempotency key",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RequestWithIdempotencyKey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/users/{workspace_id}/pin/restore": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a challenge to change a user's PIN via Security Questions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Create a PIN restore challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User Token",
                        "name": "user_token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request with idempotency key",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RequestWithIdempotencyKey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/users/{workspace_id}/pin/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a challenge to update a user's PIN via the existing PIN",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Update a PIN challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User Token",
                        "name": "user_token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request with idempotency key",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RequestWithIdempotencyKey"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/users/{workspace_id}/token": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves user details using a Circle user token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Get Circle user by token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User Token",
                        "name": "user_token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/wallets/balances/{wallet_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves token balances for a Circle wallet and ensures wallet is stored in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Get Circle wallet balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User Token",
                        "name": "user_token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Circle Wallet ID",
                        "name": "wallet_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include all token balances",
                        "name": "include_all",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by token name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by token address",
                        "name": "token_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by token standard",
                        "name": "standard",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size for pagination",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page before cursor for pagination",
                        "name": "page_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page after cursor for pagination",
                        "name": "page_after",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/wallets/get/{wallet_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves wallet details by Circle wallet ID and stores/updates wallet in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Get Circle wallet by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User Token",
                        "name": "user_token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Circle Wallet ID",
                        "name": "wallet_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/wallets/{workspace_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Lists wallets for a Circle user and stores them in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "List Circle wallets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User Token",
                        "name": "user_token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter by wallet address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by blockchain",
                        "name": "blockchain",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor for previous page",
                        "name": "page_before",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor for next page",
                        "name": "page_after",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates wallets for a Circle user and tracks wallet creation challenge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Create Circle wallets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle User Token",
                        "name": "user_token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Wallet creation request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateWalletsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/circle/{workspace_id}/challenges/{challenge_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves challenge details by Circle challenge ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "circle"
                ],
                "summary": "Get Circle challenge by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle Challenge ID",
                        "name": "challenge_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Circle User Token",
                        "name": "user_token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/customers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves paginated customers for the current workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "List customers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of customers to return (default 10, max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of customers to skip (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.CustomerResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid workspace ID format or pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access to workspace",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Create customer",
                "parameters": [
                    {
                        "description": "Customer creation data",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.CustomerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/customers/{customer_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get customer details by customer ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Get customer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CustomerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an existing customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Update customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Customer update data",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CustomerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Delete customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/customers/{customer_id}/subscriptions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all subscriptions for a specific customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "List subscriptions by customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.SubscriptionResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Checks if the server is running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Returns health status",
                        "schema": {
                            "$ref": "#/definitions/handlers.HealthResponse"
                        }
                    }
                }
            }
        },
        "/networks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all networks with their associated tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "List networks with tokens",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Filter networks by testnet status",
                        "name": "testnet",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter networks by active status",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListNetworksWithTokensResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Create network",
                "parameters": [
                    {
                        "description": "Network creation data",
                        "name": "network",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateNetworkRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/networks/chain/{chain_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get network details by chain ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Get network by chain ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chain ID",
                        "name": "chain_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/networks/{network_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get network details by network ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Get network by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network ID",
                        "name": "network_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an existing network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Update network",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network ID",
                        "name": "network_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Network update data",
                        "name": "network",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateNetworkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Delete network",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network ID",
                        "name": "network_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/prices/{price_id}/subscribe": {
            "post": {
                "description": "Creates a subscription for a product's specific price with the given delegation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Subscribe to a product's price",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Price ID to subscribe to",
                        "name": "price_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Subscription details",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscribeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves paginated products for a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "List products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of products to return (default 10, max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of products to skip (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListProductsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new product with associated prices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create product",
                "parameters": [
                    {
                        "description": "Product and prices creation data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/products/{product_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get product details by product ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an existing product. Price updates should be done via price-specific endpoints.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product update data (prices are not updated here)",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a product and its associated prices (soft delete)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Delete product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/products/{product_id}/subscriptions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all subscriptions for a specific product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "List subscriptions by product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.SubscriptionResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/prices/{price_id}": {
            "get": {
                "description": "Get public product and specific price details by Price ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get public product and price details by Price ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Price ID",
                        "name": "price_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.PublicProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription-events/transaction/{tx_hash}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a subscription event by its transaction hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription-events"
                ],
                "summary": "Get a subscription event by transaction hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction Hash",
                        "name": "tx_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscriptionEventResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription-events/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all subscription events",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription-events"
                ],
                "summary": "List all subscription events",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.SubscriptionEventResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription-events/{event_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a subscription event by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription-events"
                ],
                "summary": "Get a subscription event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscriptionEventResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all non-deleted subscriptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "List all subscriptions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.SubscriptionResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a subscription by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Get a subscription by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID",
                        "name": "subscription_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a subscription with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Update an existing subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID",
                        "name": "subscription_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated subscription details",
                        "name": "subscription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Soft-deletes a subscription (marks as deleted)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Delete a subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID",
                        "name": "subscription_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription_id}/events": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all events for a specific subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription-events"
                ],
                "summary": "List events for a subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID",
                        "name": "subscription_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.SubscriptionEventResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "List tokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListTokensResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens/network/{network_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all tokens for a specific network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "List tokens by network",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network ID",
                        "name": "network_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListTokensResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens/network/{network_id}/address/{address}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get token details by network ID and contract address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get token by address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network ID",
                        "name": "network_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contract Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens/quote": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the price of a given token symbol in the specified fiat currency using CoinMarketCap API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get token quote",
                "parameters": [
                    {
                        "description": "Token and Fiat symbols",
                        "name": "quote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.GetTokenQuoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetTokenQuoteResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing parameters",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error or failed to fetch price from CoinMarketCap",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens/{token_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get token details by token ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get token by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "token_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "User creation data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{user_id}/account": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets the account details associated with a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user's account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.UserAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wallets": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all wallets for the authenticated workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "List all wallets",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Include Circle wallet data",
                        "name": "include_circle_data",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by wallet type (wallet, circle_wallet)",
                        "name": "wallet_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.WalletListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new wallet for the authenticated workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Create a new wallet",
                "parameters": [
                    {
                        "description": "Wallet creation request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.WalletResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wallets/{wallet_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get wallet details by wallet ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Get wallet by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet ID",
                        "name": "wallet_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include Circle wallet data",
                        "name": "include_circle_data",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.WalletResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Soft delete a wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Delete a wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet ID",
                        "name": "wallet_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update wallet details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Update a wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet ID",
                        "name": "wallet_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Wallet update request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.WalletResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workspaces": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all workspaces for the current account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspaces"
                ],
                "summary": "List workspaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListWorkspacesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspaces"
                ],
                "summary": "Create workspace",
                "parameters": [
                    {
                        "description": "Workspace creation data",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateWorkspaceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.WorkspaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a specific workspace by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspaces"
                ],
                "summary": "Get a workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.WorkspaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an existing workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspaces"
                ],
                "summary": "Update workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Workspace update data",
                        "name": "workspace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateWorkspaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.WorkspaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Soft deletes a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspaces"
                ],
                "summary": "Delete workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.APIKeyResponse": {
            "type": "object",
            "properties": {
                "access_level": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "expires_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "last_used_at": {
                    "type": "integer"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "handlers.AccountDetailsResponse": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/handlers.AccountResponse"
                },
                "user": {
                    "$ref": "#/definitions/handlers.UserResponse"
                }
            }
        },
        "handlers.AccountResponse": {
            "type": "object",
            "properties": {
                "account_type": {
                    "type": "string"
                },
                "business_name": {
                    "type": "string"
                },
                "business_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "finished_onboarding": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "support_email": {
                    "type": "string"
                },
                "support_phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "website_url": {
                    "type": "string"
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.WorkspaceResponse"
                    }
                }
            }
        },
        "handlers.CaveatStruct": {
            "type": "object"
        },
        "handlers.CircleWalletData": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "circle_user_id": {
                    "type": "string"
                },
                "circle_wallet_id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateAPIKeyRequest": {
            "type": "object",
            "required": [
                "access_level",
                "description",
                "name"
            ],
            "properties": {
                "access_level": {
                    "type": "string",
                    "enum": [
                        "read",
                        "write",
                        "admin"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateAccountRequest": {
            "type": "object",
            "required": [
                "account_type",
                "name"
            ],
            "properties": {
                "account_type": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "merchant"
                    ]
                },
                "business_name": {
                    "type": "string"
                },
                "business_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "finished_onboarding": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "support_email": {
                    "type": "string"
                },
                "support_phone": {
                    "type": "string"
                },
                "website_url": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateCustomerRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateNetworkRequest": {
            "type": "object",
            "required": [
                "chain_id",
                "circle_network_type",
                "name",
                "network_type",
                "type"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "block_explorer_url": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "circle_network_type": {
                    "type": "string"
                },
                "is_testnet": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "network_type": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handlers.CreatePriceRequest": {
            "type": "object",
            "required": [
                "currency",
                "type",
                "unit_amount_in_pennies"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "currency": {
                    "type": "string"
                },
                "interval_count": {
                    "type": "integer"
                },
                "interval_type": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object"
                },
                "nickname": {
                    "type": "string"
                },
                "term_length": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "unit_amount_in_pennies": {
                    "type": "integer"
                }
            }
        },
        "handlers.CreateProductRequest": {
            "type": "object",
            "required": [
                "name",
                "prices",
                "wallet_id"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.CreatePriceRequest"
                    }
                },
                "product_tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.CreateProductTokenRequest"
                    }
                },
                "url": {
                    "type": "string"
                },
                "wallet_id": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateProductTokenRequest": {
            "type": "object",
            "required": [
                "network_id",
                "product_id",
                "token_id"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "network_id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateTransferRequest": {
            "type": "object",
            "required": [
                "destination_address",
                "idempotency_key"
            ],
            "properties": {
                "amounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blockchain": {
                    "type": "string"
                },
                "destination_address": {
                    "type": "string"
                },
                "fee_level": {
                    "type": "string"
                },
                "gas_limit": {
                    "type": "string"
                },
                "gas_price": {
                    "type": "string"
                },
                "idempotency_key": {
                    "type": "string"
                },
                "max_fee": {
                    "type": "string"
                },
                "nft_token_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "priority_fee": {
                    "type": "string"
                },
                "ref_id": {
                    "type": "string"
                },
                "source_address": {
                    "type": "string"
                },
                "token_address": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "wallet_id": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateUserRequest": {
            "type": "object",
            "required": [
                "account_id",
                "email",
                "role",
                "supabase_id"
            ],
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "address_line_1": {
                    "type": "string"
                },
                "address_line_2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "first_name": {
                    "type": "string"
                },
                "is_account_owner": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "phone": {
                    "type": "string"
                },
                "picture_url": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "support",
                        "developer"
                    ]
                },
                "state_region": {
                    "type": "string"
                },
                "supabase_id": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateUserResponse": {
            "type": "object",
            "properties": {
                "createDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "pinDetails": {
                    "type": "object",
                    "properties": {
                        "failedAttempts": {
                            "type": "integer"
                        },
                        "lastLockOverrideDate": {
                            "type": "string"
                        },
                        "lockedDate": {
                            "type": "string"
                        },
                        "lockedExpiryDate": {
                            "type": "string"
                        }
                    }
                },
                "pinStatus": {
                    "type": "string"
                },
                "securityQuestionDetails": {
                    "type": "object",
                    "properties": {
                        "failedAttempts": {
                            "type": "integer"
                        },
                        "lastLockOverrideDate": {
                            "type": "string"
                        },
                        "lockedDate": {
                            "type": "string"
                        },
                        "lockedExpiryDate": {
                            "type": "string"
                        }
                    }
                },
                "securityQuestionStatus": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateUserWithPinAuthRequest": {
            "type": "object",
            "required": [
                "external_user_id"
            ],
            "properties": {
                "external_user_id": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateWalletRequest": {
            "type": "object",
            "required": [
                "network_id",
                "network_type",
                "wallet_address",
                "wallet_type"
            ],
            "properties": {
                "chain_id": {
                    "description": "Only for circle wallets",
                    "type": "integer"
                },
                "circle_user_id": {
                    "description": "Circle wallet specific fields",
                    "type": "string"
                },
                "circle_wallet_id": {
                    "description": "Only for circle wallets",
                    "type": "string"
                },
                "ens": {
                    "type": "string"
                },
                "is_primary": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "network_id": {
                    "type": "string"
                },
                "network_type": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "state": {
                    "description": "Only for circle wallets",
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                },
                "wallet_address": {
                    "type": "string"
                },
                "wallet_type": {
                    "description": "'wallet' or 'circle_wallet'",
                    "type": "string"
                }
            }
        },
        "handlers.CreateWalletsRequest": {
            "type": "object",
            "required": [
                "account_type",
                "blockchains",
                "idempotency_key",
                "user_token"
            ],
            "properties": {
                "account_type": {
                    "type": "string"
                },
                "blockchains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "idempotency_key": {
                    "type": "string"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "ref_id": {
                                "type": "string"
                            }
                        }
                    }
                },
                "user_token": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateWorkspaceRequest": {
            "type": "object",
            "required": [
                "business_name",
                "name"
            ],
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "business_name": {
                    "type": "string"
                },
                "business_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "support_email": {
                    "type": "string"
                },
                "support_phone": {
                    "type": "string"
                },
                "website_url": {
                    "type": "string"
                }
            }
        },
        "handlers.CustomerResponse": {
            "type": "object",
            "properties": {
                "business_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "workspace_id": {
                    "type": "string"
                },
                "workspace_name": {
                    "type": "string"
                }
            }
        },
        "handlers.DelegationStruct": {
            "type": "object",
            "properties": {
                "authority": {
                    "type": "string"
                },
                "caveats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.CaveatStruct"
                    }
                },
                "delegate": {
                    "type": "string"
                },
                "delegator": {
                    "type": "string"
                },
                "salt": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.EstimateTransferFeeRequest": {
            "type": "object",
            "required": [
                "amounts",
                "destination_address"
            ],
            "properties": {
                "amounts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blockchain": {
                    "type": "string"
                },
                "destination_address": {
                    "type": "string"
                },
                "nft_token_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source_address": {
                    "type": "string"
                },
                "token_address": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                },
                "wallet_id": {
                    "type": "string"
                }
            }
        },
        "handlers.GetTokenQuoteRequest": {
            "type": "object",
            "required": [
                "fiat_symbol",
                "token_symbol"
            ],
            "properties": {
                "fiat_symbol": {
                    "type": "string"
                },
                "token_symbol": {
                    "type": "string"
                }
            }
        },
        "handlers.GetTokenQuoteResponse": {
            "type": "object",
            "properties": {
                "fiat_symbol": {
                    "type": "string"
                },
                "token_amount_in_fiat": {
                    "type": "number"
                },
                "token_symbol": {
                    "type": "string"
                }
            }
        },
        "handlers.HealthResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "handlers.InitializeUserRequest": {
            "type": "object",
            "required": [
                "blockchains",
                "idempotency_key"
            ],
            "properties": {
                "account_type": {
                    "type": "string"
                },
                "blockchains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "idempotency_key": {
                    "type": "string"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "ref_id": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "handlers.ListAPIKeysResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.APIKeyResponse"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "object": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.ListNetworksWithTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.NetworkWithTokensResponse"
                    }
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "handlers.ListProductsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.ProductResponse"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "object": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.ListTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.TokenResponse"
                    }
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "handlers.ListWorkspacesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.WorkspaceResponse"
                    }
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "handlers.NetworkResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "block_explorer_url": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "circle_network_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_testnet": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "network_type": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "handlers.NetworkWithTokensResponse": {
            "type": "object",
            "properties": {
                "network": {
                    "$ref": "#/definitions/handlers.NetworkResponse"
                },
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.TokenResponse"
                    }
                }
            }
        },
        "handlers.PaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "has_more": {
                    "type": "boolean"
                },
                "object": {
                    "type": "string"
                },
                "pagination": {
                    "$ref": "#/definitions/handlers.Pagination"
                }
            }
        },
        "handlers.Pagination": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total_items": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "handlers.PriceResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "interval_count": {
                    "type": "integer"
                },
                "interval_type": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object"
                },
                "nickname": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "term_length": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "unit_amount_in_pennies": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "handlers.ProductResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.PriceResponse"
                    }
                },
                "product_tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.ProductTokenResponse"
                    }
                },
                "updated_at": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "wallet_id": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "handlers.ProductTokenResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "chain_id": {
                    "type": "integer"
                },
                "contract_address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "gas_token": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "network_id": {
                    "type": "string"
                },
                "network_name": {
                    "type": "string"
                },
                "network_type": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "token_decimals": {
                    "type": "integer"
                },
                "token_id": {
                    "type": "string"
                },
                "token_name": {
                    "type": "string"
                },
                "token_symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "handlers.PublicProductResponse": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "$ref": "#/definitions/handlers.PriceResponse"
                },
                "product_tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.PublicProductTokenResponse"
                    }
                },
                "smart_account_address": {
                    "type": "string"
                },
                "smart_account_explorer_url": {
                    "type": "string"
                },
                "smart_account_network": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "wallet_address": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "handlers.PublicProductTokenResponse": {
            "type": "object",
            "properties": {
                "network_chain_id": {
                    "type": "string"
                },
                "network_id": {
                    "type": "string"
                },
                "network_name": {
                    "type": "string"
                },
                "product_token_id": {
                    "type": "string"
                },
                "token_address": {
                    "type": "string"
                },
                "token_decimals": {
                    "type": "integer"
                },
                "token_id": {
                    "type": "string"
                },
                "token_image_url": {
                    "type": "string"
                },
                "token_name": {
                    "type": "string"
                },
                "token_symbol": {
                    "type": "string"
                }
            }
        },
        "handlers.RequestWithIdempotencyKey": {
            "type": "object",
            "required": [
                "idempotency_key",
                "user_token"
            ],
            "properties": {
                "idempotency_key": {
                    "type": "string"
                },
                "user_token": {
                    "type": "string"
                }
            }
        },
        "handlers.SubscribeRequest": {
            "type": "object",
            "required": [
                "delegation",
                "price_id",
                "product_token_id",
                "subscriber_address",
                "token_amount"
            ],
            "properties": {
                "delegation": {
                    "$ref": "#/definitions/handlers.DelegationStruct"
                },
                "price_id": {
                    "type": "string"
                },
                "product_token_id": {
                    "type": "string"
                },
                "subscriber_address": {
                    "type": "string"
                },
                "token_amount": {
                    "type": "string"
                }
            }
        },
        "handlers.SubscriptionEventPriceInfo": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "interval_count": {
                    "description": "Use pgtype.Int4 to handle potential nulls",
                    "type": "integer"
                },
                "interval_type": {
                    "description": "Use db.NullIntervalType to handle potential nulls",
                    "type": "string"
                },
                "term_length": {
                    "description": "Use pgtype.Int4 to handle potential nulls",
                    "type": "integer"
                },
                "type": {
                    "description": "e.g., recurring, one_off",
                    "type": "string"
                },
                "unit_amount_in_pennies": {
                    "type": "integer"
                }
            }
        },
        "handlers.SubscriptionEventResponse": {
            "type": "object",
            "properties": {
                "customer": {
                    "$ref": "#/definitions/handlers.CustomerResponse"
                },
                "customer_id": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "event_amount_in_cents": {
                    "type": "integer"
                },
                "event_created_at": {
                    "type": "string"
                },
                "event_metadata": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "event_occurred_at": {
                    "type": "string"
                },
                "event_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "network": {
                    "$ref": "#/definitions/handlers.NetworkResponse"
                },
                "price_info": {
                    "$ref": "#/definitions/handlers.SubscriptionEventPriceInfo"
                },
                "product_id": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "product_token": {
                    "$ref": "#/definitions/handlers.ProductTokenResponse"
                },
                "subscription": {
                    "$ref": "#/definitions/handlers.SubscriptionResponse"
                },
                "subscription_id": {
                    "type": "string"
                },
                "subscription_status": {
                    "type": "string"
                },
                "transaction_hash": {
                    "type": "string"
                }
            }
        },
        "handlers.SubscriptionResponse": {
            "type": "object",
            "properties": {
                "canceled_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "current_period_end": {
                    "type": "string"
                },
                "current_period_start": {
                    "type": "string"
                },
                "customer_email": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "customer_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "$ref": "#/definitions/handlers.PriceResponse"
                },
                "product": {
                    "$ref": "#/definitions/handlers.ProductResponse"
                },
                "product_token": {
                    "$ref": "#/definitions/handlers.ProductTokenResponse"
                },
                "status": {
                    "type": "string"
                },
                "token_amount": {
                    "type": "integer"
                },
                "trial_end": {
                    "type": "string"
                },
                "trial_start": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "handlers.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handlers.TokenResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "contract_address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "decimals": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "integer"
                },
                "gas_token": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "network_id": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "handlers.UpdateAPIKeyRequest": {
            "type": "object",
            "properties": {
                "access_level": {
                    "type": "string",
                    "enum": [
                        "read",
                        "write",
                        "admin"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateCustomerRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateNetworkRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "block_explorer_url": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "circle_network_type": {
                    "type": "string"
                },
                "is_testnet": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "network_type": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateProductRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "product_tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.CreateProductTokenRequest"
                    }
                },
                "url": {
                    "type": "string"
                },
                "wallet_id": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateSubscriptionRequest": {
            "type": "object"
        },
        "handlers.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "address_line_1": {
                    "type": "string"
                },
                "address_line_2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "phone": {
                    "type": "string"
                },
                "picture_url": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "state_region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "two_factor_enabled": {
                    "type": "boolean"
                }
            }
        },
        "handlers.UpdateWalletRequest": {
            "type": "object",
            "properties": {
                "ens": {
                    "type": "string"
                },
                "is_primary": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "nickname": {
                    "type": "string"
                },
                "state": {
                    "description": "Circle wallet specific fields",
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "handlers.UpdateWorkspaceRequest": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "business_name": {
                    "type": "string"
                },
                "business_type": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "support_email": {
                    "type": "string"
                },
                "support_phone": {
                    "type": "string"
                },
                "website_url": {
                    "type": "string"
                }
            }
        },
        "handlers.UserAccountResponse": {
            "type": "object",
            "properties": {
                "account_name": {
                    "type": "string"
                },
                "address_line_1": {
                    "type": "string"
                },
                "address_line_2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_owner": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "object": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "picture_url": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "state_region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "supabase_id": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "two_factor_enabled": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "handlers.UserResponse": {
            "type": "object",
            "properties": {
                "address_line_1": {
                    "type": "string"
                },
                "address_line_2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "object": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "picture_url": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "state_region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "supabase_id": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "two_factor_enabled": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "handlers.ValidateAddressRequest": {
            "type": "object",
            "required": [
                "address",
                "blockchain"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "blockchain": {
                    "type": "string"
                }
            }
        },
        "handlers.WalletListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.WalletResponse"
                    }
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "handlers.WalletResponse": {
            "type": "object",
            "properties": {
                "circle_data": {
                    "description": "Only present for circle wallets",
                    "allOf": [
                        {
                            "$ref": "#/definitions/handlers.CircleWalletData"
                        }
                    ]
                },
                "created_at": {
                    "type": "integer"
                },
                "ens": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_primary": {
                    "type": "boolean"
                },
                "last_used_at": {
                    "type": "integer"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "network_id": {
                    "type": "string"
                },
                "network_type": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "verified": {
                    "type": "boolean"
                },
                "wallet_address": {
                    "type": "string"
                },
                "wallet_type": {
                    "description": "'wallet' or 'circle_wallet'",
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "handlers.WorkspaceResponse": {
            "description": "Workspace response",
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "business_name": {
                    "type": "string"
                },
                "business_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "support_email": {
                    "type": "string"
                },
                "support_phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "website_url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Cyphera API",
	Description:      "API Server for Cyphera application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
