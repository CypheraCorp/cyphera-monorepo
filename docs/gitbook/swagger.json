{
    "swagger": "2.0",
    "info": {
        "description": "API Server for Cyphera application",
        "title": "Cyphera API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/api/v1",
    "paths": {
        "/accounts/{account_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the details of the user's account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.AccountDetailsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api-keys": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all API keys for the current workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-keys"
                ],
                "summary": "List API keys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListAPIKeysResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api-keys/{api_key_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a specific API key by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-keys"
                ],
                "summary": "Get an API key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key ID",
                        "name": "api_key_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.APIKeyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Soft deletes an API key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api-keys"
                ],
                "summary": "Delete API key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key ID",
                        "name": "api_key_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/error-recovery/health": {
            "get": {
                "description": "Check the health and status of the error recovery service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "error-recovery"
                ],
                "summary": "Check error recovery service health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.DetailedSuccessResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/workspaces/{workspace_id}/dlq/stats": {
            "get": {
                "description": "Get statistics about dead letter queue processing for a workspace and provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "error-recovery"
                ],
                "summary": "Get DLQ processing statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider name (e.g., stripe)",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Since timestamp (Unix timestamp or RFC3339)",
                        "name": "since",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.DLQProcessingStats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.DetailedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.DetailedErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/workspaces/{workspace_id}/sync/recover": {
            "post": {
                "description": "Resume or restart a failed or incomplete sync session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "error-recovery"
                ],
                "summary": "Recover a failed sync session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Sync recovery request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SyncRecoveryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SyncRecoveryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.DetailedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.DetailedErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/workspaces/{workspace_id}/sync/recoverable": {
            "get": {
                "description": "Get a list of sync sessions that failed and can be resumed or restarted",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "error-recovery"
                ],
                "summary": "Get failed sync sessions that can be recovered",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit number of results (default: 20, max: 50)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination (default: 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.DetailedSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.DetailedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.DetailedErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/workspaces/{workspace_id}/webhooks/failed": {
            "get": {
                "description": "Get a list of failed webhook events that can be retried",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "error-recovery"
                ],
                "summary": "Get failed webhook events for retry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider name (e.g., stripe)",
                        "name": "provider",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit number of results (default: 50, max: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum processing attempts (default: 3)",
                        "name": "max_attempts",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.DetailedSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.DetailedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.DetailedErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/workspaces/{workspace_id}/webhooks/replay": {
            "post": {
                "description": "Manually replay a webhook event that failed processing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "error-recovery"
                ],
                "summary": "Replay a failed webhook event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Webhook replay request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.WebhookReplayRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.WebhookReplayResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.DetailedErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.DetailedErrorResponse"
                        }
                    }
                }
            }
        },
        "/customers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves paginated customers for the current workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "List customers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of customers to return (default 10, max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of customers to skip (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.CustomerResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid workspace ID format or pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access to workspace",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/customers/{customer_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get customer details by customer ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Get customer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CustomerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/customers/{customer_id}/onboarding": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the finished_onboarding status for a customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Update customer onboarding status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Finished onboarding status",
                        "name": "finished_onboarding",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.CustomerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/customers/{customer_id}/subscriptions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all subscriptions for a specific customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "List subscriptions by customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Customer ID",
                        "name": "customer_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.SubscriptionResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/networks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all networks with their associated tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "List networks with tokens",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Filter networks by testnet status",
                        "name": "testnet",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter networks by active status",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListNetworksWithTokensResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/networks/chain/{chain_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get network details by chain ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Get network by chain ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chain ID",
                        "name": "chain_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/networks/{network_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get network details by network ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "networks"
                ],
                "summary": "Get network by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network ID",
                        "name": "network_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.NetworkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves paginated products for a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "List products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of products to return (default 10, max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of products to skip (default 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListProductsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new product with associated prices",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create product",
                "parameters": [
                    {
                        "description": "Product and prices creation data",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/products/{product_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get product details by product ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get product by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an existing product. Price updates should be done via price-specific endpoints.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product update data (prices are not updated here)",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a product and its associated prices (soft delete)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Delete product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/products/{product_id}/subscriptions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all subscriptions for a specific product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "List subscriptions by product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.SubscriptionResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription-events": {
            "get": {
                "description": "Retrieves a paginated list of subscription events for the workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription-events"
                ],
                "summary": "List subscription events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "X-Workspace-ID",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of events to return (default 20, max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default 1)",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.PaginatedResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid workspace ID format or pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve or count subscription events",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscription-events/{event_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a subscription event by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription-events"
                ],
                "summary": "Get a subscription event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscriptionEventResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all non-deleted subscriptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "List all subscriptions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.PaginatedResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/handlers.SubscriptionResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a subscription by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Get a subscription by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID",
                        "name": "subscription_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Soft-deletes a subscription (marks as deleted)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Delete a subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID",
                        "name": "subscription_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscription_id}/events": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all events for a specific subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscription-events"
                ],
                "summary": "List events for a subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID",
                        "name": "subscription_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.SubscriptionEventResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sync/config": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Lists all payment provider configurations for a workspace",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment-sync"
                ],
                "summary": "List payment provider configurations",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "configurations": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/handlers.ConfigurationResponse"
                                    }
                                },
                                "total": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new payment provider configuration for a workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment-sync"
                ],
                "summary": "Create payment provider configuration",
                "parameters": [
                    {
                        "description": "Configuration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateConfigurationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.ConfigurationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sync/config/id/{config_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a payment provider configuration by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment-sync"
                ],
                "summary": "Get payment provider configuration by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Configuration ID",
                        "name": "config_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ConfigurationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an existing payment provider configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment-sync"
                ],
                "summary": "Update payment provider configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Configuration ID",
                        "name": "config_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Configuration updates",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateConfigurationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ConfigurationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a payment provider configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment-sync"
                ],
                "summary": "Delete payment provider configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Configuration ID",
                        "name": "config_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sync/config/id/{config_id}/test": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Tests the connection to a payment provider using the configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment-sync"
                ],
                "summary": "Test payment provider connection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Configuration ID",
                        "name": "config_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sync/config/{provider}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a payment provider configuration by provider name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment-sync"
                ],
                "summary": "Get payment provider configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Provider name",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ConfigurationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sync/providers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Lists all available payment providers that can be configured",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment-sync"
                ],
                "summary": "Get available payment providers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "providers": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sync/sessions": {
            "get": {
                "description": "Retrieves a list of sync sessions for the workspace",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment-sync"
                ],
                "summary": "List sync sessions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by provider name",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Number of results to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Number of results to skip",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "sessions": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/handlers.SyncSessionResponse"
                                    }
                                },
                                "total": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sync/sessions/{id}": {
            "get": {
                "description": "Retrieves details of a specific sync session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment-sync"
                ],
                "summary": "Get sync session details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.SyncSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sync/sessions/{id}/status": {
            "get": {
                "description": "Retrieves the current status and progress of a sync session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment-sync"
                ],
                "summary": "Get sync session status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error_summary": {
                                    "type": "object"
                                },
                                "progress": {
                                    "type": "object"
                                },
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sync/{provider}/initial": {
            "post": {
                "description": "Initiates an initial data synchronization from payment provider to Cyphera",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment-sync"
                ],
                "summary": "Start initial sync for any payment provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment provider name (e.g., stripe, chargebee)",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Initial sync configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.InitialSyncRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.InitialSyncResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "List tokens",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListTokensResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens/network/{network_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all tokens for a specific network",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "List tokens by network",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network ID",
                        "name": "network_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListTokensResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens/network/{network_id}/address/{address}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get token details by network ID and contract address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get token by address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network ID",
                        "name": "network_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contract Address",
                        "name": "address",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens/quote": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the price of a given token symbol in the specified fiat currency using CoinMarketCap API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get token quote",
                "parameters": [
                    {
                        "description": "Token and Fiat symbols",
                        "name": "quote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.GetTokenQuoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetTokenQuoteResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing parameters",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error or failed to fetch price from CoinMarketCap",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tokens/{token_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get token details by token ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tokens"
                ],
                "summary": "Get token by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token ID",
                        "name": "token_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wallets": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all wallets for the authenticated workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "List all wallets",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Include Circle wallet data",
                        "name": "include_circle_data",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by wallet type (wallet, circle_wallet)",
                        "name": "wallet_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.WalletListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new wallet for each active network in the authenticated workspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Create a new wallet",
                "parameters": [
                    {
                        "description": "Wallet creation request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateWalletRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.WalletListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wallets/{wallet_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get wallet details by wallet ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Get wallet by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet ID",
                        "name": "wallet_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include Circle wallet data",
                        "name": "include_circle_data",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.WalletResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Soft delete a wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallets"
                ],
                "summary": "Delete a wallet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Wallet ID",
                        "name": "wallet_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workspaces": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all workspaces for the current account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspaces"
                ],
                "summary": "List workspaces",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListWorkspacesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a specific workspace by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workspaces"
                ],
                "summary": "Get a workspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workspace ID",
                        "name": "workspace_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.WorkspaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.APIKeyResponse": {
            "type": "object",
            "properties": {
                "access_level": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "expires_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "last_used_at": {
                    "type": "integer"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "handlers.AccountDetailsResponse": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/handlers.AccountResponse"
                },
                "user": {
                    "$ref": "#/definitions/handlers.UserResponse"
                },
                "wallets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.WalletResponse"
                    }
                }
            }
        },
        "handlers.AccountResponse": {
            "type": "object",
            "properties": {
                "account_type": {
                    "type": "string"
                },
                "business_name": {
                    "type": "string"
                },
                "business_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "finished_onboarding": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "support_email": {
                    "type": "string"
                },
                "support_phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "website_url": {
                    "type": "string"
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.WorkspaceResponse"
                    }
                }
            }
        },
        "handlers.CircleWalletData": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "circle_user_id": {
                    "type": "string"
                },
                "circle_wallet_id": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "handlers.ConfigurationResponse": {
            "type": "object",
            "properties": {
                "connected_account_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_test_mode": {
                    "type": "boolean"
                },
                "last_sync_at": {
                    "type": "integer"
                },
                "last_webhook_at": {
                    "type": "integer"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "provider_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "webhook_endpoint_url": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateConfigurationRequest": {
            "type": "object",
            "required": [
                "configuration",
                "provider_name"
            ],
            "properties": {
                "configuration": {
                    "$ref": "#/definitions/handlers.PaymentProviderConfig"
                },
                "connected_account_id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_test_mode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "provider_name": {
                    "type": "string"
                },
                "webhook_endpoint_url": {
                    "type": "string"
                }
            }
        },
        "handlers.CreatePriceRequest": {
            "type": "object",
            "required": [
                "currency",
                "type",
                "unit_amount_in_pennies"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "currency": {
                    "type": "string"
                },
                "interval_count": {
                    "type": "integer"
                },
                "interval_type": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object"
                },
                "nickname": {
                    "type": "string"
                },
                "term_length": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "unit_amount_in_pennies": {
                    "type": "integer"
                }
            }
        },
        "handlers.CreateProductRequest": {
            "type": "object",
            "required": [
                "name",
                "prices",
                "wallet_id"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.CreatePriceRequest"
                    }
                },
                "product_tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.CreateProductTokenRequest"
                    }
                },
                "url": {
                    "type": "string"
                },
                "wallet_id": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateProductTokenRequest": {
            "type": "object",
            "required": [
                "network_id",
                "product_id",
                "token_id"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "network_id": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateWalletRequest": {
            "type": "object",
            "required": [
                "network_type",
                "wallet_address",
                "wallet_type"
            ],
            "properties": {
                "chain_id": {
                    "description": "Only for circle wallets",
                    "type": "integer"
                },
                "circle_user_id": {
                    "description": "Circle wallet specific fields",
                    "type": "string"
                },
                "circle_wallet_id": {
                    "description": "Only for circle wallets",
                    "type": "string"
                },
                "ens": {
                    "type": "string"
                },
                "is_primary": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "network_type": {
                    "description": "'evm' or 'solana'",
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "state": {
                    "description": "Only for circle wallets",
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                },
                "wallet_address": {
                    "type": "string"
                },
                "wallet_type": {
                    "description": "'wallet' or 'circle_wallet'",
                    "type": "string"
                }
            }
        },
        "handlers.CustomerResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "finished_onboarding": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "handlers.DLQProcessingStats": {
            "type": "object",
            "properties": {
                "last_processed_at": {
                    "type": "string"
                },
                "max_retries_exceeded": {
                    "type": "integer"
                },
                "processing_failed": {
                    "type": "integer"
                },
                "success_rate": {
                    "type": "number"
                },
                "successfully_processed": {
                    "type": "integer"
                },
                "total_messages": {
                    "type": "integer"
                }
            }
        },
        "handlers.DetailedErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.DetailedSuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.GetTokenQuoteRequest": {
            "type": "object",
            "required": [
                "fiat_symbol",
                "token_symbol"
            ],
            "properties": {
                "fiat_symbol": {
                    "type": "string"
                },
                "token_symbol": {
                    "type": "string"
                }
            }
        },
        "handlers.GetTokenQuoteResponse": {
            "type": "object",
            "properties": {
                "fiat_symbol": {
                    "type": "string"
                },
                "token_amount_in_fiat": {
                    "type": "number"
                },
                "token_symbol": {
                    "type": "string"
                }
            }
        },
        "handlers.InitialSyncRequest": {
            "type": "object",
            "properties": {
                "batch_size": {
                    "type": "integer"
                },
                "ending_before": {
                    "type": "string"
                },
                "entity_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "full_sync": {
                    "type": "boolean"
                },
                "starting_after": {
                    "type": "string"
                }
            }
        },
        "handlers.InitialSyncResponse": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "object",
                    "additionalProperties": true
                },
                "created_at": {
                    "type": "string"
                },
                "entity_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "provider": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "handlers.ListAPIKeysResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.APIKeyResponse"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "object": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.ListNetworksWithTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.NetworkWithTokensResponse"
                    }
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "handlers.ListProductsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.ProductResponse"
                    }
                },
                "has_more": {
                    "type": "boolean"
                },
                "object": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handlers.ListTokensResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.TokenResponse"
                    }
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "handlers.ListWorkspacesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.WorkspaceResponse"
                    }
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "handlers.NetworkResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "block_explorer_url": {
                    "type": "string"
                },
                "chain_id": {
                    "type": "integer"
                },
                "circle_network_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_testnet": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "network_type": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "handlers.NetworkWithTokensResponse": {
            "type": "object",
            "properties": {
                "network": {
                    "$ref": "#/definitions/handlers.NetworkResponse"
                },
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.TokenResponse"
                    }
                }
            }
        },
        "handlers.PaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "has_more": {
                    "type": "boolean"
                },
                "object": {
                    "type": "string"
                },
                "pagination": {
                    "$ref": "#/definitions/handlers.Pagination"
                }
            }
        },
        "handlers.Pagination": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total_items": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "handlers.PaymentProviderConfig": {
            "description": "Configuration details for a payment provider",
            "type": "object",
            "required": [
                "api_key",
                "environment",
                "webhook_secret"
            ],
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "base_url": {
                    "type": "string"
                },
                "environment": {
                    "description": "\"test\" or \"live\"",
                    "type": "string"
                },
                "publishable_key": {
                    "type": "string"
                },
                "webhook_secret": {
                    "type": "string"
                }
            }
        },
        "handlers.PriceResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "interval_count": {
                    "type": "integer"
                },
                "interval_type": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object"
                },
                "nickname": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "term_length": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "unit_amount_in_pennies": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "handlers.ProductResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.PriceResponse"
                    }
                },
                "product_tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.ProductTokenResponse"
                    }
                },
                "updated_at": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "wallet_id": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "handlers.ProductTokenResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "chain_id": {
                    "type": "integer"
                },
                "contract_address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "gas_token": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "network_id": {
                    "type": "string"
                },
                "network_name": {
                    "type": "string"
                },
                "network_type": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                },
                "token_decimals": {
                    "type": "integer"
                },
                "token_id": {
                    "type": "string"
                },
                "token_name": {
                    "type": "string"
                },
                "token_symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "handlers.SubscriptionEventPriceInfo": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "interval_count": {
                    "description": "Use pgtype.Int4 to handle potential nulls",
                    "type": "integer"
                },
                "interval_type": {
                    "description": "Use db.NullIntervalType to handle potential nulls",
                    "type": "string"
                },
                "term_length": {
                    "description": "Use pgtype.Int4 to handle potential nulls",
                    "type": "integer"
                },
                "type": {
                    "description": "e.g., recurring, one_off",
                    "type": "string"
                },
                "unit_amount_in_pennies": {
                    "type": "integer"
                }
            }
        },
        "handlers.SubscriptionEventResponse": {
            "type": "object",
            "properties": {
                "customer": {
                    "$ref": "#/definitions/handlers.CustomerResponse"
                },
                "customer_id": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "event_amount_in_cents": {
                    "type": "integer"
                },
                "event_created_at": {
                    "type": "string"
                },
                "event_metadata": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "event_occurred_at": {
                    "type": "string"
                },
                "event_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "network": {
                    "$ref": "#/definitions/handlers.NetworkResponse"
                },
                "price_info": {
                    "$ref": "#/definitions/handlers.SubscriptionEventPriceInfo"
                },
                "product_id": {
                    "type": "string"
                },
                "product_name": {
                    "type": "string"
                },
                "product_token": {
                    "$ref": "#/definitions/handlers.ProductTokenResponse"
                },
                "subscription": {
                    "$ref": "#/definitions/handlers.SubscriptionResponse"
                },
                "subscription_id": {
                    "type": "string"
                },
                "subscription_status": {
                    "type": "string"
                },
                "transaction_hash": {
                    "type": "string"
                }
            }
        },
        "handlers.SubscriptionResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "current_period_end": {
                    "type": "string"
                },
                "current_period_start": {
                    "type": "string"
                },
                "customer_email": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "customer_name": {
                    "type": "string"
                },
                "customer_wallet_id": {
                    "type": "string"
                },
                "delegation_id": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "initial_transaction_hash": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "next_redemption_date": {
                    "type": "string"
                },
                "payment_provider": {
                    "type": "string"
                },
                "payment_sync_status": {
                    "type": "string"
                },
                "payment_sync_version": {
                    "type": "integer"
                },
                "payment_synced_at": {
                    "type": "string"
                },
                "price": {
                    "$ref": "#/definitions/handlers.PriceResponse"
                },
                "product": {
                    "$ref": "#/definitions/handlers.ProductResponse"
                },
                "product_token": {
                    "$ref": "#/definitions/handlers.ProductTokenResponse"
                },
                "status": {
                    "type": "string"
                },
                "token_amount": {
                    "type": "integer"
                },
                "total_amount_in_cents": {
                    "type": "integer"
                },
                "total_redemptions": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "handlers.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handlers.SyncRecoveryRequest": {
            "type": "object",
            "required": [
                "session_id",
                "workspace_id"
            ],
            "properties": {
                "entity_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "recovery_mode": {
                    "description": "\"resume\", \"restart\"",
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "handlers.SyncRecoveryResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "progress": {
                    "type": "object",
                    "additionalProperties": true
                },
                "recovered_at": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.SyncSessionResponse": {
            "type": "object",
            "properties": {
                "completed_at": {
                    "type": "string"
                },
                "config": {
                    "type": "object",
                    "additionalProperties": true
                },
                "created_at": {
                    "type": "string"
                },
                "entity_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error_summary": {
                    "type": "object",
                    "additionalProperties": true
                },
                "id": {
                    "type": "string"
                },
                "progress": {
                    "type": "object",
                    "additionalProperties": true
                },
                "provider": {
                    "type": "string"
                },
                "session_type": {
                    "type": "string"
                },
                "started_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "handlers.TokenResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "contract_address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "decimals": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "integer"
                },
                "gas_token": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "network_id": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "handlers.UpdateConfigurationRequest": {
            "type": "object",
            "properties": {
                "configuration": {
                    "$ref": "#/definitions/handlers.PaymentProviderConfig"
                },
                "connected_account_id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_test_mode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "webhook_endpoint_url": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateProductRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object"
                },
                "name": {
                    "type": "string"
                },
                "product_tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.CreateProductTokenRequest"
                    }
                },
                "url": {
                    "type": "string"
                },
                "wallet_id": {
                    "type": "string"
                }
            }
        },
        "handlers.UserResponse": {
            "type": "object",
            "properties": {
                "address_line_1": {
                    "type": "string"
                },
                "address_line_2": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "finished_onboarding": {
                    "type": "boolean"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "object": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "picture_url": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "state_region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "two_factor_enabled": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "integer"
                },
                "verifier": {
                    "description": "Login method (google, discord, etc.)",
                    "type": "string"
                },
                "verifier_id": {
                    "description": "ID from the verifier",
                    "type": "string"
                },
                "web3auth_id": {
                    "description": "Web3Auth user ID",
                    "type": "string"
                }
            }
        },
        "handlers.WalletListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.WalletResponse"
                    }
                },
                "object": {
                    "type": "string"
                }
            }
        },
        "handlers.WalletResponse": {
            "type": "object",
            "properties": {
                "circle_data": {
                    "description": "Only present for circle wallets",
                    "allOf": [
                        {
                            "$ref": "#/definitions/handlers.CircleWalletData"
                        }
                    ]
                },
                "created_at": {
                    "type": "integer"
                },
                "ens": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_primary": {
                    "type": "boolean"
                },
                "last_used_at": {
                    "type": "integer"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "network_id": {
                    "type": "string"
                },
                "network_type": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "verified": {
                    "type": "boolean"
                },
                "wallet_address": {
                    "type": "string"
                },
                "wallet_type": {
                    "description": "'wallet' or 'circle_wallet'",
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "handlers.WebhookReplayRequest": {
            "type": "object",
            "required": [
                "provider_name",
                "webhook_event_id",
                "workspace_id"
            ],
            "properties": {
                "force_replay": {
                    "type": "boolean"
                },
                "provider_name": {
                    "type": "string"
                },
                "replay_reason": {
                    "type": "string"
                },
                "webhook_event_id": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "handlers.WebhookReplayResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "original_event_id": {
                    "type": "string"
                },
                "replay_event_id": {
                    "type": "string"
                },
                "replayed_at": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.WorkspaceResponse": {
            "description": "Workspace response",
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "business_name": {
                    "type": "string"
                },
                "business_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "livemode": {
                    "type": "boolean"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "support_email": {
                    "type": "string"
                },
                "support_phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                },
                "website_url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API Key authentication. Use 'Bearer \u003ctoken\u003e' format.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}