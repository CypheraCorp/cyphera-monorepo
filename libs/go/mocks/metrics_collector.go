// Code generated by MockGen. DO NOT EDIT.
// Source: libs/go/client/http/client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockMetricsCollector is a mock of MetricsCollector interface.
type MockMetricsCollector struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsCollectorMockRecorder
}

// MockMetricsCollectorMockRecorder is the mock recorder for MockMetricsCollector.
type MockMetricsCollectorMockRecorder struct {
	mock *MockMetricsCollector
}

// NewMockMetricsCollector creates a new mock instance.
func NewMockMetricsCollector(ctrl *gomock.Controller) *MockMetricsCollector {
	mock := &MockMetricsCollector{ctrl: ctrl}
	mock.recorder = &MockMetricsCollectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsCollector) EXPECT() *MockMetricsCollectorMockRecorder {
	return m.recorder
}

// RecordRequestCount mocks base method.
func (m *MockMetricsCollector) RecordRequestCount(method, path string, statusCode int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RecordRequestCount", method, path, statusCode)
}

// RecordRequestCount indicates an expected call of RecordRequestCount.
func (mr *MockMetricsCollectorMockRecorder) RecordRequestCount(method, path, statusCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecordRequestCount", reflect.TypeOf((*MockMetricsCollector)(nil).RecordRequestCount), method, path, statusCode)
}

// RecordRequestDuration mocks base method.
func (m *MockMetricsCollector) RecordRequestDuration(method, path string, statusCode int, duration time.Duration) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RecordRequestDuration", method, path, statusCode, duration)
}

// RecordRequestDuration indicates an expected call of RecordRequestDuration.
func (mr *MockMetricsCollectorMockRecorder) RecordRequestDuration(method, path, statusCode, duration interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecordRequestDuration", reflect.TypeOf((*MockMetricsCollector)(nil).RecordRequestDuration), method, path, statusCode, duration)
}

// RecordRequestError mocks base method.
func (m *MockMetricsCollector) RecordRequestError(method, path string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RecordRequestError", method, path)
}

// RecordRequestError indicates an expected call of RecordRequestError.
func (mr *MockMetricsCollectorMockRecorder) RecordRequestError(method, path interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecordRequestError", reflect.TypeOf((*MockMetricsCollector)(nil).RecordRequestError), method, path)
}
